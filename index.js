// –°–æ–µ–¥–∏–Ω—è–µ–º –±–æ—Ç–∞
require('dotenv').config();
const { Bot, GrammyError, HttpError, Keyboard, InlineKeyboard } = require('grammy');
const bot = new Bot(process.env.BOT_API_KEY);

// –í–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ



bot.api.setMyCommands([
	{
		command: 'start',
		description: '–°—Ç–∞—Ä—Ç –±–æ—Ç–∞',
	},
	{
		command: 'inline_keyboard',
		description: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞',
	}
	// {
	// 	command: 'support',
	// 	description: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–º–æ—â—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
	// },
	// {
	// 	command: 'id',
	// 	description: '–£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID Telegram',
	// },
	// {
	// 	command: 'contact',
	// 	description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç',
	// },
	// {
	// 	command: 'location',
	// 	description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é',
	// },
])


// –í–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É —Ç–≥

bot.command('start', async (ctx) => {
	await ctx.react("‚ù§")
	await ctx.reply('<b>HelloSkillsWeb</b> –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –í–∞—Å, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞', {
		parse_mode: 'HTML'
	})
});


// bot.command('start', async (ctx) => {
// 	await ctx.react("‚ù§")
// 	await ctx.reply('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω', {
// 		parse_mode: 'HTML'
// 	})
// });

// bot.command('support', async (ctx) => {
// 	await ctx.reply('–í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ - —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏')
// });

// bot.command('id', async (ctx) => {
// 	await ctx.reply(`–í–∞—à ID <b><span class="tg-spoiler">${ctx.from.id}</span></b>`, {
// 		parse_mode: 'HTML'
// 		// parse_mode: 'MarkdownV2' *–∂–∏—Ä–Ω—ã–π*
// 	})
// });

// bot.command('contact', async (ctx) => {
// 	const shareKeyboard = new Keyboard().requestContact('–ö–æ–Ω—Ç–∞–∫—Ç').resized().oneTime().placeholder('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É')
// 	await ctx.reply('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
// 		reply_markup: shareKeyboard
// 	})
// });

// bot.command('location', async (ctx) => {
// 	const shareKeyboard = new Keyboard().requestLocation('–õ–æ–∫–∞—Ü–∏—è').resized().oneTime().placeholder('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É')
// 	await ctx.reply('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
// 		reply_markup: shareKeyboard
// 	})
// });

bot.command('inline_keyboard', async (ctx) => {
	const inlineKeyboard = new InlineKeyboard().text('1', 'button-1').text('2', 'button-2').text('3', 'button-3')
	await ctx.reply('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
		reply_markup: inlineKeyboard
	})
});

// bot.callbackQuery(/button-1-3/, async (ctx) => {
// 	await ctx.answerCallbackQuery();
// 	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`);
// });

bot.callbackQuery(/button-[1-3]/, async (ctx) => {
	await ctx.answerCallbackQuery('–í—ã–±–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!');
	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`)
})
// –í–∞—Ä–∏–∞–Ω—Ç –∫–æ–ª–±–µ–∫–∞ –Ω–æ —É–∂–µ –ø–æ–ø–∏–∑–∂–µ

// bot.on('callback_query:data', async (ctx) => {
// 	await ctx.answerCallbackQuery();
// 	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`);
// });



//–í–µ—à–∞–µ–º –∫–æ–ª–±—ç–∫–∫–≤–µ—Ä–∏ –Ω–∞ –æ—Ç–≤–µ—Ç –ø–æ –∫–Ω–æ–ø–∫–∞–º
// –í–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Å–∞–º—ã–π –ª—É—á—à–∏–π

// bot.callbackQuery(['button-1', 'button-2', 'button-3'], async (ctx) => {
// 	await ctx.answerCallbackQuery('–í—ã–±–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!');
// 	await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–∏—Ñ—Ä—É')
// })



// –í–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

// –ü–æ–ª–Ω—ã–π –ª–æ–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

bot.on('msg', async (ctx) => {
	console.log(ctx.msg);
	await ctx.reply(ctx.msg)
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞

// bot.on('msg', async (ctx) => {
// 	// –õ–æ–≤–∏–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ª–æ–≥

// 	console.log(ctx.msg.contact);
// 	await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ` + `+` + ctx.msg.contact.phone_number)
// });

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏

// bot.on('msg', async (ctx) => {
// 	// –õ–æ–≤–∏–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ª–æ–≥
// 	console.log(ctx.msg.location);
// 	await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é ` `latitude: ` + ctx.msg.location.latitude + `, longitude:` + ctx.msg.location.longitude)
// });

// bot.on('message', async (ctx) => {
// 	console.log(ctx.msg)
// 	if (ctx.message.contact) {
// 		await ctx.react("‚ù§")
// 		await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ` + `+` + ctx.msg.contact.phone_number)
// 	} else if (ctx.message.location) {
// 		await ctx.react("‚ù§")
// 		await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é - ` + `Latitude: ` + ctx.msg.location.latitude + `, Longitude:` + ctx.msg.location.longitude)

// 	} else {
// 		await ctx.react("ü•¥")
// 		await ctx.reply('–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç, —Å–æ–±–æ–ª–µ–∑–Ω—É—é :\'\(')
// 	}
// });


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫

bot.catch((err) => {
	const ctx = err.ctx;
	console.log(`Error while handling update ${ctx.update.update_id}:`);
	const e = err.error;

	if (e instanceof GrammyError) {
		console.error("Error in request:", e.description)
	} else if (e instanceof HttpError) {
		console.error("Could not contact Telegram", e);
	} else {
		console.error("Unknow error", e);
	}
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

bot.start();


// Temp info

// .oneTime() - —é–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
// .resized() - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–∫—Ä–∞–Ω–∞
// .row() - –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞ –Ω–µ–∫—Å—Ç —Å—Ç—Ä–æ–∫—É


// Temp

// bot.on('msg', async (ctx) => {
// 	console.log(ctx.from);
// 	await ctx.reply(ctx.from)
// });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–π—Å–∞ –∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤

// bot.on('message:voice', async (ctx) => {
// 	await ctx.reply('–í–æ–π—Å, —Å–µ—Ä—å—ë–∑–Ω–æ?')
// });

// –°–ª—É—à–∞—Ç–µ–ª—å –ø–æ —Ç–µ–∫—Å—Ç—É

// bot.hears(['–°–ª–æ–≤–æ', '–°–õ–û–í–û'], async (ctx) => {
// 	await ctx.reply('–ü–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª —Å–ª–æ–≤–æ!')
// });

// –í—ã—Ü–µ–ø–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è

// bot.hears([/–ø–∏–ø–µ—Ü/, /–ü–∏–ø–µ—Ü/], async (ctx) => {
// 	await ctx.reply('–†—É–≥–∞–µ–º—Å—è?')
// });


// –§–∏–ª—å—Ç—Ä—ã

// bot.on('msg').filter((ctx) => {
// 	return ctx.from.id = 418814235
// }, async (ctx) => {
// 	await ctx.reply('–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!')
// })



