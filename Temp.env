// import 'dotenv/config'
// import { Bot, GrammyError, HttpError, Keyboard } from 'grammy';
// import axios from 'axios';
// const bot = new Bot(process.env.BOT_API_KEY);

// "type": "module",


// bot.command('start', async (ctx) => {
// 	await ctx.react("‚ù§")
// 	await ctx.reply('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω', {
// 		parse_mode: 'HTML'
// 	})
// });

// bot.command('support', async (ctx) => {
// 	await ctx.reply('–í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ - —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏')
// });

// bot.command('id', async (ctx) => {
// 	await ctx.reply(`–í–∞—à ID <b><span class="tg-spoiler">${ctx.from.id}</span></b>`, {
// 		parse_mode: 'HTML'
// 		// parse_mode: 'MarkdownV2' *–∂–∏—Ä–Ω—ã–π*
// 	})
// });

// bot.command('contact', async (ctx) => {
// 	const shareKeyboard = new Keyboard().requestContact('–ö–æ–Ω—Ç–∞–∫—Ç').resized().oneTime().placeholder('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É')
// 	await ctx.reply('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
// 		reply_markup: shareKeyboard
// 	})
// });

// bot.command('location', async (ctx) => {
// 	const shareKeyboard = new Keyboard().requestLocation('–õ–æ–∫–∞—Ü–∏—è').resized().oneTime().placeholder('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É')
// 	await ctx.reply('–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
// 		reply_markup: shareKeyboard
// 	})
// });

// bot.command('inline_keyboard', async (ctx) => {
// 	const inlineKeyboard = new InlineKeyboard()
// 		.text('–ö–æ—Ç–∏–∫–∏', '–ö–æ—Ç–∏–∫–∏').row()
// 		.text('–ü—ë—Å–∏–∫–∏', '–ü–µ—Å–∏–∫–∏').row()
// 		.text('–í–∞—Ñ–µ–ª—å–∫–∏', '–í–∞—Ñ–µ–ª—å–∫–∏').row()
// 	await ctx.reply('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
// 		reply_markup: inlineKeyboard
// 	})
// });

// bot.callbackQuery(/button-1-3/, async (ctx) => {
// 	await ctx.answerCallbackQuery();
// 	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`);
// });


// bot.callbackQuery(['–ö–æ—Ç–∏–∫–∏', '–ü–µ—Å–∏–∫–∏', '–í–∞—Ñ–µ–ª—å–∫–∏'], async (ctx) => {
// 	await ctx.answerCallbackQuery('–í—ã–±–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!');
// 	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`)
// })
// –í–∞—Ä–∏–∞–Ω—Ç –∫–æ–ª–±–µ–∫–∞ –Ω–æ —É–∂–µ –ø–æ–ø–∏–∑–∂–µ

// bot.on('callback_query:data', async (ctx) => {
// 	await ctx.answerCallbackQuery();
// 	await ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: ${ctx.callbackQuery.data}`);
// });



//–í–µ—à–∞–µ–º –∫–æ–ª–±—ç–∫–∫–≤–µ—Ä–∏ –Ω–∞ –æ—Ç–≤–µ—Ç –ø–æ –∫–Ω–æ–ø–∫–∞–º
// –í–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Å–∞–º—ã–π –ª—É—á—à–∏–π

// bot.callbackQuery(['button-1', 'button-2', 'button-3'], async (ctx) => {
// 	await ctx.answerCallbackQuery('–í—ã–±–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!');
// 	await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–∏—Ñ—Ä—É')
// })



// –í–µ—à–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

// –ü–æ–ª–Ω—ã–π –ª–æ–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

// bot.on('msg', async (ctx) => {
// 	console.log(ctx.msg);
// 	await ctx.reply(ctx.msg)
// });


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞

// bot.on('msg', async (ctx) => {
// 	// –õ–æ–≤–∏–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ª–æ–≥

// 	console.log(ctx.msg.contact);
// 	await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ` + `+` + ctx.msg.contact.phone_number)
// });

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏

// bot.on('msg', async (ctx) => {
// 	// –õ–æ–≤–∏–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ª–æ–≥
// 	console.log(ctx.msg.location);
// 	await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é ` `latitude: ` + ctx.msg.location.latitude + `, longitude:` + ctx.msg.location.longitude)
// });

// bot.on('message', async (ctx) => {
// 	console.log(ctx.msg)
// 	if (ctx.message.contact) {
// 		await ctx.react("‚ù§")
// 		await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ` + `+` + ctx.msg.contact.phone_number)
// 	} else if (ctx.message.location) {
// 		await ctx.react("‚ù§")
// 		await ctx.reply(`–°–ø–∞—Å–∏–±–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à—É –ª–æ–∫–∞—Ü–∏—é - ` + `Latitude: ` + ctx.msg.location.latitude + `, Longitude:` + ctx.msg.location.longitude)

// 	} else {
// 		await ctx.react("ü•¥")
// 		await ctx.reply('–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç, —Å–æ–±–æ–ª–µ–∑–Ω—É—é :\'\(')
// 	}
// });

